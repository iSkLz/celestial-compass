"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Takes buffer and returns it as a generator/iterator.
 * Handles the problem of pipeline not knowning current buffer position.
 *
 * @param buffer - buffer to iterate over
 * @ignore
 */
function* bufferGenerator(buffer) {
    // If buffer is empty, after first .next() it will throw
    if (buffer.length === 0) {
        throw new EmptyIteratorBufferError();
    }
    const max = buffer.length - 1;
    let pos = 0;
    // Iterate over all buffer values but last
    while (pos < max) {
        yield buffer[pos];
        pos += 1;
    }
    // Return final buffer item (with done: true)
    return buffer[pos];
}
exports.bufferGenerator = bufferGenerator;
/**
 * Error about trying to iterate over empty buffer.
 */
class EmptyIteratorBufferError extends Error {
    constructor() {
        super('Trying to iterate over empty buffer!');
        Error.captureStackTrace(this, this.constructor);
    }
}
exports.EmptyIteratorBufferError = EmptyIteratorBufferError;
//# sourceMappingURL=bufferGenerator.js.map